(()=>{"use strict";var e=function(e,t,s,n){return new(s||(s=Promise))((function(o,i){function a(e){try{l(n.next(e))}catch(e){i(e)}}function r(e){try{l(n.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(a,r)}l((n=n.apply(e,t||[])).next())}))};class t{constructor(e,t){this.apiBaseUrl=e,this.apiKey=t}sendMessage(t){return e(this,void 0,void 0,(function*(){try{const e=yield fetch(`${this.apiBaseUrl}/conversation`,{method:"POST",headers:{"Content-Type":"application/json","x-api-key":this.apiKey},body:JSON.stringify(t)});if(!e.ok){const t=yield e.text().catch((()=>"No error details available"));throw new Error(`API error: ${e.status} - ${t}`)}return yield e.json()}catch(e){throw console.error("Error sending message:",e),e}}))}fetchConversation(t){return e(this,void 0,void 0,(function*(){try{const e=yield fetch(`${this.apiBaseUrl}/conversation/${t}`,{method:"GET",headers:{"Content-Type":"application/json","x-api-key":this.apiKey}});if(!e.ok){const t=yield e.text().catch((()=>"No error details available"));throw new Error(`API error: ${e.status} - ${t}`)}const s=yield e.json();return s.messageMap&&Object.keys(s.messageMap).forEach((e=>{s.messageMap[e].thinkingLog&&console.log(`Message ${e} has thinking log data`)})),s.citationMappings||(s.citationMappings={}),s}catch(e){throw console.error(`Error fetching conversation ${t}:`,e),e}}))}fetchMessage(t,s){return e(this,void 0,void 0,(function*(){try{const e=yield fetch(`${this.apiBaseUrl}/conversation/${t}/${s}`,{method:"GET",headers:{"Content-Type":"application/json","x-api-key":this.apiKey}});if(404===e.status)return console.log("Message not ready yet (404 response) - will retry"),{success:!1,error:"message_not_ready",status:404};if(!e.ok){const t=yield e.text().catch((()=>"No error details available"));return{success:!1,error:`API error: ${e.status} - ${t}`,status:e.status}}const n=yield e.json();return console.log("Message response data:",n),n.message&&(n.message.thinkingLog?console.log("Found thinking log in message response"):n.thinkingLog&&(n.message.thinkingLog=n.thinkingLog,console.log("Found thinking log at top level of response"))),{success:!0,message:n.message||n}}catch(e){return e instanceof Error?(console.error("Error fetching message:",e),{success:!1,error:e.message}):{success:!1,error:"Unknown error"}}}))}submitLead(t,s){return e(this,void 0,void 0,(function*(){try{const e="https://xs4dsewvc7.execute-api.us-east-1.amazonaws.com/prod/leads",n=t.userId||this.getUserId(),o=Object.assign(Object.assign({},t),{userId:n});console.log("Submitting lead with data:",{leadData:o,conversationId:s});const i=yield fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({leadData:o,conversationId:s})});if(!i.ok)return console.error("Failed to submit lead data:",yield i.text().catch((()=>"No error details available"))),!1;const a=yield i.json();return console.log("Lead submitted successfully:",a),!0}catch(e){return console.error("Error submitting lead data:",e),!1}}))}updateLeadConversation(t,s){return e(this,void 0,void 0,(function*(){try{const e="https://xs4dsewvc7.execute-api.us-east-1.amazonaws.com/prod/leads/update-conversation";console.log("Updating lead conversation:",{userId:t,conversationId:s});const n=yield fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,conversationId:s})});if(!n.ok)return console.error("Failed to update lead conversation:",yield n.text().catch((()=>"No error details available"))),!1;const o=yield n.json();return console.log("Lead conversation updated successfully:",o),!0}catch(e){return console.error("Error updating lead conversation:",e),!1}}))}getUserId(){let e=localStorage.getItem("chatbot_user_id");return e||(e="user_"+Date.now()+"_"+Math.random().toString(36).substring(2,9),localStorage.setItem("chatbot_user_id",e)),e}checkUserExists(t){return e(this,void 0,void 0,(function*(){try{const e=localStorage.getItem(`user_${t}`);return e?JSON.parse(e):null}catch(e){return console.error("Error checking user existence:",e),null}}))}updateUserData(t){return e(this,void 0,void 0,(function*(){try{const e=`user_${t.userId}`,s=JSON.stringify(t);return localStorage.setItem(e,s),console.log("Saved user data to localStorage:",{key:e,data:s}),!0}catch(e){return console.error("Error updating user data:",e),!1}}))}}function s(e){try{localStorage.setItem("chatbotConversations",JSON.stringify(e))}catch(e){console.error("Error saving conversations to localStorage:",e)}}function n(e,t=18,s=18){const n=document.createElementNS("http://www.w3.org/2000/svg","svg");n.setAttribute("width",t.toString()),n.setAttribute("height",s.toString()),n.setAttribute("viewBox","0 0 24 24"),n.setAttribute("fill","none"),n.setAttribute("stroke","currentColor"),n.setAttribute("stroke-width","2"),n.setAttribute("stroke-linecap","round"),n.setAttribute("stroke-linejoin","round");const o=document.createElementNS("http://www.w3.org/2000/svg","path");return o.setAttribute("d",e),n.appendChild(o),n}const o="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z";function i(e){return new Promise((t=>setTimeout(t,e)))}function a(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))}class r{constructor(e,t,s){this.onSubmit=t,this.onSkip=s,this.element=this.createForm(),this.attachEventListeners(),setTimeout((()=>{const t=document.getElementById(e);t?t.appendChild(this.element):console.error(`Container with ID ${e} not found`)}),0)}createForm(){const e=document.createElement("div");e.className="lead-form-container",e.id="lead-form-container",e.style.maxHeight="70vh",e.style.overflowY="auto";const t=document.createElement("div");t.className="lead-form-header";const s=document.createElement("h3");s.textContent="Before we start chatting...",s.className="lead-form-title",t.appendChild(s);const n=document.createElement("p");n.textContent="Please share a bit about yourself so we can personalize your experience.",n.className="lead-form-subtitle",t.appendChild(n),e.appendChild(t);const o=document.createElement("form");o.id="lead-form",o.className="lead-form";const i=this.createFormGroup("name","Name","text","Your name");o.appendChild(i);const a=this.createFormGroup("email","Email","email","Your email address");o.appendChild(a);const r=this.createFormGroup("phone","Phone","tel","Your phone number");o.appendChild(r);const l=this.createFormGroup("country","Country","text","Your country");o.appendChild(l);const c=this.createFormGroup("state","State/Province","text","Your state or province");o.appendChild(c);const d=this.createFormGroup("city","City","text","Your city");o.appendChild(d);const h=this.createFormGroup("program","Interested Program","text","Program you are interested in");o.appendChild(h);const p=document.createElement("div");p.className="lead-form-buttons";const u=document.createElement("button");u.type="submit",u.id="lead-submit-btn",u.className="lead-submit-btn",u.textContent="Submit",u.style.backgroundColor="#d32f2f",u.style.color="white",p.appendChild(u);const m=document.createElement("button");return m.type="button",m.id="lead-skip-btn",m.className="lead-skip-btn",m.textContent="Skip for now",p.appendChild(m),o.appendChild(p),e.appendChild(o),this.applyStyles(e),e}createFormGroup(e,t,s,n){const o=document.createElement("div");o.className="form-group";const i=document.createElement("label");i.htmlFor=e,i.textContent=t,o.appendChild(i);const a=document.createElement("input");return a.type=s,a.id=e,a.name=e,a.placeholder=n,"email"===e&&(a.required=!0),o.appendChild(a),o}applyStyles(e){e.style.backgroundColor="white",e.style.borderRadius="8px",e.style.padding="20px",e.style.boxShadow="0 2px 10px rgba(0, 0, 0, 0.1)",e.style.width="100%",e.style.height="100%",e.style.maxWidth="",e.style.margin="",e.style.padding="0",e.style.boxShadow="";const t=e.querySelector(".lead-form");t&&(t.style.width="100%",t.style.height="100%",t.style.margin="0",t.style.padding="0");const s=e.querySelector(".lead-form-header");if(s){s.style.textAlign="center",s.style.marginBottom="10px";const e=s.querySelector(".lead-form-title");e&&(e.style.fontSize="18px",e.style.marginBottom="8px",e.style.color="#2d3748");const t=s.querySelector(".lead-form-subtitle");t&&(t.style.fontSize="14px",t.style.color="#718096",t.style.margin="0")}if(t){t.style.display="flex",t.style.flexDirection="column",t.style.gap="15px",t.querySelectorAll(".form-group").forEach((e=>{const t=e;t.style.display="flex",t.style.flexDirection="column",t.style.gap="5px";const s=t.querySelector("label");s&&(s.style.fontSize="14px",s.style.fontWeight="500",s.style.color="#4a5568");const n=t.querySelector("input");n&&(n.style.padding="10px",n.style.borderRadius="6px",n.style.border="1px solid #e2e8f0",n.style.fontSize="14px",n.style.outline="none",n.style.transition="border-color 0.3s ease")}));const e=t.querySelector(".lead-form-buttons");if(e){e.style.display="flex",e.style.justifyContent="space-between",e.style.marginTop="10px";const t=e.querySelector(".lead-submit-btn");t&&(t.style.backgroundColor="#d32f2f",t.style.color="white",t.style.border="none",t.style.padding="10px 20px",t.style.borderRadius="6px",t.style.cursor="pointer",t.style.fontSize="14px",t.style.fontWeight="500",t.style.transition="background-color 0.3s ease");const s=e.querySelector(".lead-skip-btn");s&&(s.style.backgroundColor="transparent",s.style.color="#718096",s.style.border="none",s.style.padding="10px",s.style.borderRadius="6px",s.style.cursor="pointer",s.style.fontSize="14px",s.style.transition="color 0.3s ease",s.style.textDecoration="underline")}}}attachEventListeners(){const e=this.element.querySelector("#lead-form"),t=this.element.querySelector("#lead-skip-btn");e&&e.addEventListener("submit",(t=>{t.preventDefault();const s=new FormData(e),n={name:s.get("name")||"",email:s.get("email")||"",phone:s.get("phone")||"",country:s.get("country")||"",state:s.get("state")||"",city:s.get("city")||"",program:s.get("program")||"",timestamp:Date.now(),userId:s.get("userId")||""};this.onSubmit(n)})),t&&t.addEventListener("click",(()=>{this.onSkip()}))}toggle(e){this.element.style.display=e?"flex":"none"}remove(){this.element.parentNode&&this.element.parentNode.removeChild(this.element)}}var l=function(e,t,s,n){return new(s||(s=Promise))((function(o,i){function a(e){try{l(n.next(e))}catch(e){i(e)}}function r(e){try{l(n.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(a,r)}l((n=n.apply(e,t||[])).next())}))};class c{constructor(e){this.leadForm=null,this.apiService=new t(e.apiBaseUrl,e.apiKey),this.state={conversations:{},activeConversationId:null,isMinimized:!1,isSidebarOpen:!1,isWaitingForResponse:!1,maxRetries:10,retryDelay:1500,initialRetryDelay:2e3,userData:null,showLeadForm:!1},this.container=this.createContainer(),this.launcher=this.createLauncher(),document.body.appendChild(this.container),document.body.appendChild(this.launcher),this.ensureCorrectDOMStructure(),this.injectCitationStyles(),document.addEventListener("showCitation",(e=>{this.showCitationPopup(e.detail)})),document.addEventListener("click",(e=>{window.__lastClickPosition={clientX:e.clientX,clientY:e.clientY}})),this.checkUserIdentification().then((()=>{console.log("User identification complete, waiting for user to click launcher")})),this.addEventListeners()}checkUserIdentification(){return l(this,void 0,void 0,(function*(){let e=localStorage.getItem("chatbot_user_id");if(console.log("localStorage userId:",e),e||(e=function(){const e=document.cookie.split(";");for(let t=0;t<e.length;t++){const s=e[t].split("=");if("chatbot_user_id"===s[0].trim())return decodeURIComponent(s[1])}return null}(),console.log("Cookie userId:",e)),e){const t=`user_${e}`,s=localStorage.getItem(t);console.log("Raw user data from localStorage:",s);const n=yield this.apiService.checkUserExists(e);if(console.log("Loaded user data from API service:",n),n)return this.state.userData=n,n.lastSeen=Date.now(),yield this.apiService.updateUserData(n),void console.log("Returning user identified:",e,"hasCompletedLeadForm:",n.hasCompletedLeadForm)}const t=a();!function(e,t){const s=new Date;s.setDate(s.getDate()+365);const n=encodeURIComponent(t)+`; expires=${s.toUTCString()}; path=/; SameSite=Strict`;document.cookie=`chatbot_user_id=${n}`}(0,t),localStorage.setItem("chatbot_user_id",t),this.state.userData={userId:t,firstSeen:Date.now(),lastSeen:Date.now(),conversationIds:[],hasCompletedLeadForm:!1},this.state.showLeadForm=!0,console.log("New user created:",t)}))}shouldShowLeadForm(){return!0===this.state.showLeadForm||!!this.state.userData&&!this.state.userData.hasCompletedLeadForm&&!this.state.userData.leadInfo}showLeadForm(){console.log("Showing lead form"),this.state.showLeadForm=!0;const e=document.getElementById("chatbot-main");e&&(e.innerHTML=""),this.leadForm=new r("chatbot-main",this.handleLeadSubmit.bind(this),this.handleLeadSkip.bind(this));const t=document.getElementById("empty-state"),s=document.getElementById("messages-container"),n=document.getElementById("input-container");t&&(t.style.display="none"),s&&(s.style.display="none"),n&&(n.style.display="none")}handleLeadSubmit(e){return l(this,void 0,void 0,(function*(){if(console.log("Lead form submitted:",e),!this.state.userData)return void console.error("No user data available");e.userId=this.state.userData.userId,this.state.userData.leadInfo=e,this.state.userData.hasCompletedLeadForm=!0,console.log("Updated user data:",this.state.userData);const t=this.state.activeConversationId;yield this.apiService.submitLead(e,t),t&&(yield this.apiService.updateLeadConversation(e.userId,t));const n=yield this.apiService.updateUserData(this.state.userData);console.log("User data update result:",n),this.leadForm&&(this.leadForm.remove(),this.leadForm=null),this.state.showLeadForm=!1,this.ensureCorrectDOMStructure(),this.addEventListeners(),this.createNewChat(),this.state.activeConversationId&&this.state.conversations[this.state.activeConversationId]&&(this.state.conversations[this.state.activeConversationId].leadInfo=e,s(this.state.conversations)),setTimeout((()=>{const t=`Hi ${e.name||"there"}! Thanks for sharing your information. How can I help you today?`;this.simulateBotMessage(t)}),500)}))}handleLeadSkip(){console.log("Lead form skipped"),this.state.userData&&(this.state.userData.hasCompletedLeadForm=!0,this.apiService.updateUserData(this.state.userData)),this.leadForm&&(this.leadForm.remove(),this.leadForm=null),this.state.showLeadForm=!1,this.ensureCorrectDOMStructure(),this.addEventListeners(),this.state.activeConversationId||(this.createNewChat(),setTimeout((()=>{this.simulateBotMessage("Hi there! How can I help you today?")}),500))}showEmptyState(){const e=document.getElementById("empty-state"),t=document.getElementById("messages-container"),s=document.getElementById("input-container");e&&(e.style.display="flex"),t&&(t.style.display="none"),s&&(s.style.display="none")}simulateBotMessage(e){if(!this.state.activeConversationId)return;const t={role:"assistant",content:[{contentType:"text",body:e}],createTime:Date.now()};this.addMessageToUI(t);const n="bot-welcome-"+Date.now(),o=this.state.conversations[this.state.activeConversationId];o&&o.messageMap&&(o.messageMap[n]=t),s(this.state.conversations)}createContainer(){const e=document.createElement("div");return e.id="chatbot-container",e.className="chatbot-container",e.style.display="none",e}createLauncher(){const e=document.createElement("div");e.id="chatbot-launcher",e.style.display="flex",e.style.position="fixed",e.style.bottom="20px",e.style.right="20px",e.style.width="60px",e.style.height="60px",e.style.borderRadius="50%",e.style.backgroundColor="#d32f2f",e.style.color="white",e.style.cursor="pointer",e.style.justifyContent="center",e.style.alignItems="center",e.style.boxShadow="0 4px 12px rgba(0, 0, 0, 0.15)",e.style.zIndex="999",e.style.transition="all 0.3s ease";const t=n(o,24,24);return e.appendChild(t),e}ensureCorrectDOMStructure(){for(console.log("Initial DOM structure:",this.container.innerHTML);this.container.firstChild;)this.container.removeChild(this.container.firstChild);this.container.style.flexDirection="column",this.container.style.zIndex="1000";const e=document.createElement("div");e.className="chatbot-header",e.id="chatbot-header",e.style.display="flex",e.style.justifyContent="space-between",e.style.alignItems="center",e.style.padding="12px 16px",e.style.backgroundColor="#d32f2f",e.style.color="white",e.style.borderRadius="8px 8px 0 0",e.style.cursor="pointer";const t=document.createElement("div");t.className="logo-title",t.style.display="flex",t.style.alignItems="center",t.style.gap="10px";const s=n(o,20,20);t.appendChild(s);const i=document.createElement("div");i.className="chatbot-title",i.textContent="Chatbot",i.style.fontSize="16px",i.style.fontWeight="500",t.appendChild(i),e.appendChild(t);const a=document.createElement("div");a.className="header-actions",a.style.display="flex",a.style.gap="10px";const r=document.createElement("button");r.className="header-button",r.id="toggle-sidebar",r.style.background="none",r.style.border="none",r.style.color="white",r.style.cursor="pointer",r.style.fontSize="18px",r.style.display="flex",r.style.alignItems="center",r.style.justifyContent="center",r.style.width="24px",r.style.height="24px",r.style.transition="all 0.3s ease",r.style.borderRadius="50%",r.appendChild(n("M3 12h18M3 6h18M3 18h18")),r.addEventListener("click",this.toggleSidebar.bind(this)),a.appendChild(r);const l=document.createElement("button");l.className="header-button",l.id="minimize-btn",l.style.background="none",l.style.border="none",l.style.color="white",l.style.cursor="pointer",l.style.fontSize="18px",l.style.display="flex",l.style.alignItems="center",l.style.justifyContent="center",l.style.width="24px",l.style.height="24px",l.style.transition="all 0.3s ease",l.style.borderRadius="50%",l.appendChild(n("M5 12h14")),l.addEventListener("click",this.toggleMinimize.bind(this)),a.appendChild(l);const c=document.createElement("button");c.className="header-button",c.id="close-btn",c.style.background="none",c.style.border="none",c.style.color="white",c.style.cursor="pointer",c.style.fontSize="18px",c.style.display="flex",c.style.alignItems="center",c.style.justifyContent="center",c.style.width="24px",c.style.height="24px",c.style.transition="all 0.3s ease",c.style.borderRadius="50%",c.appendChild(n("M18 6L6 18M6 6l12 12")),c.addEventListener("click",this.closeChatbot.bind(this)),a.appendChild(c),e.appendChild(a);const d=document.createElement("div");d.className="chatbot-layout",d.id="chatbot-layout",d.style.display="flex",d.style.flexDirection="row",d.style.height="calc(100% - 59px)",d.style.position="relative",d.style.overflow="hidden";const h=document.createElement("div");h.className="chatbot-sidebar",h.id="chatbot-sidebar",h.style.width="0",h.style.minWidth="0",h.style.backgroundColor="#edf2f7",h.style.overflowY="auto",h.style.borderRight="1px solid #e2e8f0",h.style.transition="all 0.3s ease",h.style.flexShrink="0",h.style.order="0";const p=document.createElement("div");p.className="sidebar-header",p.style.padding="12px",p.style.borderBottom="1px solid #e2e8f0",p.style.display="flex",p.style.justifyContent="space-between",p.style.alignItems="center";const u=document.createElement("button");u.className="new-chat-btn",u.id="new-chat-btn",u.textContent="New Chat",u.style.backgroundColor="#d32f2f",u.style.color="white",u.style.border="none",u.style.padding="8px 12px",u.style.borderRadius="4px",u.style.cursor="pointer",u.style.fontSize="14px",u.addEventListener("click",this.createNewChat.bind(this)),p.appendChild(u),h.appendChild(p);const m=document.createElement("div");m.className="conversations-list",m.id="conversations-list",m.style.padding="8px",h.appendChild(m);const y=document.createElement("div");y.className="chatbot-main",y.id="chatbot-main",y.style.flex="1",y.style.display="flex",y.style.flexDirection="column",y.style.height="100%",y.style.minWidth="0",y.style.overflow="hidden",y.style.order="1";const g=document.createElement("div");g.className="empty-state",g.id="empty-state",g.style.display="flex",g.style.flexDirection="column",g.style.alignItems="center",g.style.justifyContent="center",g.style.height="100%",g.style.padding="20px",g.style.textAlign="center";const v=document.createElement("h3");v.className="empty-state-title",v.textContent="Welcome to AI Chatbot",v.style.fontSize="18px",v.style.fontWeight="500",v.style.marginBottom="8px",g.appendChild(v);const f=document.createElement("p");f.className="empty-state-description",f.textContent="Start a new conversation or select an existing one from the sidebar.",f.style.fontSize="14px",f.style.color="#a0aec0",f.style.marginBottom="16px",g.appendChild(f);const b=document.createElement("button");b.className="start-chat-btn",b.id="start-chat-btn",b.textContent="Start a new chat",b.style.backgroundColor="#d32f2f",b.style.color="white",b.style.border="none",b.style.padding="10px 16px",b.style.borderRadius="8px",b.style.cursor="pointer",b.style.fontSize="14px",b.addEventListener("click",this.createNewChat.bind(this)),g.appendChild(b);const x=document.createElement("div");x.className="messages-container",x.id="messages-container",x.style.flex="1",x.style.padding="16px",x.style.overflowY="auto",x.style.display="none",x.style.flexDirection="column";const C=document.createElement("div");C.className="input-container",C.id="input-container",C.style.padding="12px",C.style.borderTop="1px solid #e2e8f0",C.style.display="none";const w="claude-v3.5-sonnet",I=document.createElement("div");I.className="input-area",I.style.display="flex",I.style.gap="8px";const M=document.createElement("textarea");M.className="message-input",M.id="message-input",M.placeholder="Type a message...",M.rows=1,M.style.flex="1",M.style.border="1px solid #e2e8f0",M.style.borderRadius="8px",M.style.padding="10px 14px",M.style.resize="none",M.style.height="40px",M.style.maxHeight="120px",M.style.outline="none",M.style.fontSize="14px",M.addEventListener("keydown",(e=>{if("Enter"===e.key&&!e.shiftKey){e.preventDefault();const t=M.value.trim();t&&!this.state.isWaitingForResponse&&(this.sendMessage(t,w),M.value="",M.style.height="auto")}})),M.addEventListener("input",(()=>{M.style.height="auto",M.style.height=(M.scrollHeight>120?120:M.scrollHeight)+"px",E.disabled=""===M.value.trim()||this.state.isWaitingForResponse})),I.appendChild(M);const E=document.createElement("button");E.className="send-button",E.id="send-button",E.disabled=!0,E.style.backgroundColor="#6b46c1",E.style.color="white",E.style.border="none",E.style.width="40px",E.style.height="40px",E.style.borderRadius="8px",E.style.cursor="pointer",E.style.display="flex",E.style.alignItems="center",E.style.justifyContent="center",E.appendChild(n("M22 2L11 13M22 2L15 22 11 13 2 9 22 2")),E.addEventListener("click",(()=>{const e=M.value.trim();e&&!this.state.isWaitingForResponse&&(this.sendMessage(e,w),M.value="",M.style.height="auto",E.disabled=!0)})),I.appendChild(E),C.appendChild(I),d.appendChild(h),d.appendChild(y),y.appendChild(g),y.appendChild(x),y.appendChild(C),this.container.appendChild(e),this.container.appendChild(d),console.log("Final DOM structure:",this.container.innerHTML)}loadConversations(){console.log("Loading conversations from storage...");const e=function(){try{const e=localStorage.getItem("chatbotConversations");if(!e)return{};const t=JSON.parse(e),s={};return Object.keys(t).forEach((e=>{const n=t[e];if(s[e]={id:n.id||e,createTime:n.createTime||Date.now(),title:n.title||"Conversation",messageMap:{},leadInfo:n.leadInfo||void 0},n.messageMap){const t={};Object.keys(n.messageMap).forEach((e=>{const s=n.messageMap[e];s&&(t[e]={role:"bot"===s.role?"assistant":s.role||"user",content:s.content||[{contentType:"text",body:""}],createTime:s.createTime||Date.now()})})),s[e].messageMap=t}})),s}catch(e){return console.error("Error loading conversations from localStorage:",e),{}}}();console.log("Stored conversations:",e);for(const[t,s]of Object.entries(e)){s.messageMap||(s.messageMap={});const e=Object.values(s.messageMap);if(e.forEach((e=>{e.createTime||(e.createTime=Date.now()),"bot"===e.role&&(e.role="assistant")})),!s.title||""===s.title.trim()||"Conversation"===s.title||"New Conversation"===s.title){e.sort(((e,t)=>(e.createTime||0)-(t.createTime||0)));const t=e.find((e=>"user"===e.role));if(t&&t.content&&t.content.length>0){const e=t.content[0].body;s.title=e.length>30?e.substring(0,27)+"...":e}else s.title="Conversation"}}this.state.conversations=e;const t=Object.keys(this.state.conversations).length>0;if(console.log("Has conversations:",t),t){const e=Object.keys(this.state.conversations).sort(((e,t)=>this.state.conversations[t].createTime-this.state.conversations[e].createTime))[0];console.log("Most recent conversation ID:",e),this.updateConversationsList(),this.setActiveConversation(e)}else{console.log("No conversations found, showing empty state");const e=document.getElementById("empty-state"),t=document.getElementById("messages-container"),s=document.getElementById("input-container");e&&(e.style.display="flex"),t&&(t.style.display="none"),s&&(s.style.display="none")}this.state.userData&&(this.state.userData.conversationIds=Object.keys(this.state.conversations),this.apiService.updateUserData(this.state.userData))}addEventListeners(){this.launcher.addEventListener("click",(()=>{console.log("Launcher clicked, isMinimized:",this.state.isMinimized),this.state.isMinimized?(console.log("Restoring minimized chatbot"),this.container.style.display="flex",this.container.classList.remove("minimized"),this.container.style.height="600px",this.container.style.overflow="hidden",this.launcher.style.display="none",this.state.isMinimized=!1):(console.log("Opening closed chatbot"),this.container.style.display="flex",this.container.classList.remove("minimized"),this.container.style.height="600px",this.container.style.overflow="hidden",this.launcher.style.display="none",this.state.isMinimized=!1,this.shouldShowLeadForm()?this.showLeadForm():this.loadConversations())})),this.container.addEventListener("click",(e=>{if(this.state.isMinimized){const t=e.target;t.closest(".header-actions")||t.closest(".header-button")||(console.log("Minimized container clicked, restoring chatbot"),this.container.style.display="flex",this.container.classList.remove("minimized"),this.container.style.height="600px",this.container.style.overflow="hidden",this.launcher.style.display="none",this.state.isMinimized=!1)}}));const e=document.getElementById("chatbot-header");e&&e.addEventListener("click",(t=>{var s;const n=t.target;(n===e||n.classList.contains("chatbot-title")||n.classList.contains("logo-title")||(null===(s=n.parentElement)||void 0===s?void 0:s.classList.contains("logo-title")))&&this.state.isMinimized&&(this.container.classList.remove("minimized"),this.container.style.height="600px",this.container.style.overflow="hidden",this.state.isMinimized=!1)})),document.addEventListener("click",(e=>{window.__lastClickPosition={clientX:e.clientX,clientY:e.clientY}})),document.addEventListener("showCitation",(e=>{this.showCitationPopup(e.detail)}))}toggleSidebar(){console.log("Toggling sidebar"),this.state.isSidebarOpen=!this.state.isSidebarOpen;const e=document.getElementById("chatbot-sidebar");e&&(this.state.isSidebarOpen?(e.style.width="180px",e.style.minWidth="180px"):(e.style.width="0",e.style.minWidth="0"))}toggleMinimize(){this.state.isMinimized?(console.log("Maximizing chatbot"),this.state.isMinimized=!1,this.container.classList.remove("minimized"),this.container.style.height="600px",this.container.style.overflow="hidden",this.launcher.style.display="none",console.log("Chatbot maximized, isMinimized:",this.state.isMinimized)):(console.log("Minimizing chatbot"),this.state.isMinimized=!0,this.container.classList.add("minimized"),this.container.style.height="60px",this.container.style.overflow="hidden",this.launcher.style.display="flex",console.log("Chatbot minimized, isMinimized:",this.state.isMinimized))}minimizeChatbot(){console.log("Minimizing chatbot"),this.state.isMinimized=!0,this.container.classList.add("minimized"),this.container.style.height="60px",this.container.style.overflow="hidden",this.launcher.style.display="flex",console.log("Chatbot minimized, isMinimized:",this.state.isMinimized)}closeChatbot(){this.container.style.display="none",this.launcher.style.display="flex"}updateConversationsList(){const e=document.getElementById("conversations-list");if(!e)return;e.innerHTML="";const t=Object.keys(this.state.conversations);0!==t.length&&(t.sort(((e,t)=>this.state.conversations[t].createTime-this.state.conversations[e].createTime)),t.forEach((t=>{const s=this.state.conversations[t];this.ensureValidTitle(t);const n=document.createElement("div");n.classList.add("conversation-item"),n.dataset.id=t,t===this.state.activeConversationId&&n.classList.add("active"),n.style.padding="10px",n.style.borderRadius="4px",n.style.marginBottom="4px",n.style.cursor="pointer",n.style.transition="all 0.3s ease",n.style.whiteSpace="nowrap",n.style.overflow="hidden",n.style.textOverflow="ellipsis",n.style.fontSize="14px",t===this.state.activeConversationId&&(n.style.backgroundColor="#e2e8f0",n.style.fontWeight="500");const o=s.title||"Conversation";n.textContent=o,n.addEventListener("click",(()=>{this.setActiveConversation(t)})),e.appendChild(n)})),this.state.userData&&(this.state.userData.conversationIds=t,this.apiService.updateUserData(this.state.userData)))}ensureValidTitle(e){const t=this.state.conversations[e];if(!t)return;if(t.title&&"New Conversation"!==t.title&&"Conversation"!==t.title&&""!==t.title.trim())return;const n=Object.values(t.messageMap||{});if(0===n.length)return;n.sort(((e,t)=>(e.createTime||0)-(t.createTime||0)));const o=n.filter((e=>"user"===e.role));if(o.length>0){const e=o[0];if(e.content&&e.content.length>0){const n=e.content[0].body;n&&(t.title=n.length>30?n.substring(0,27)+"...":n,s(this.state.conversations))}}}setActiveConversation(e){if(this.state.activeConversationId===e)return;console.log(`Setting active conversation to ${e}`),this.state.activeConversationId&&this.state.conversations[this.state.activeConversationId]&&s(this.state.conversations),this.state.activeConversationId=e;const t=document.getElementById("empty-state"),n=document.getElementById("messages-container"),o=document.getElementById("input-container");t&&(t.style.display="none"),n&&(n.style.display="flex",n.innerHTML=""),o&&(o.style.display="flex"),this.state.conversations[e]?this.state.conversations[e].messageMap||(this.state.conversations[e].messageMap={}):(this.state.conversations[e]={id:e,createTime:Date.now(),title:"New Conversation",messageMap:{}},this.state.userData&&this.state.userData.leadInfo&&(this.state.conversations[e].leadInfo=this.state.userData.leadInfo));const i=!(Object.keys(this.state.conversations[e].messageMap).length>0);this.renderMessages(),i?this.fetchConversation(e).then((()=>{console.log("Fetched conversation from server"),this.ensureValidTitle(e),this.renderMessages(),this.updateConversationsList()})).catch((e=>{console.error("Error fetching conversation:",e)})):(this.ensureValidTitle(e),this.updateConversationsList());const a=document.getElementById("message-input");a&&(a.value="",a.focus()),this.state.userData&&(this.state.userData.conversationIds.includes(e)||(this.state.userData.conversationIds.push(e),this.apiService.updateUserData(this.state.userData)))}createNewChat(){if(console.log("Creating new chat"),this.shouldShowLeadForm())return void this.showLeadForm();const e=a(),t={id:e,createTime:Date.now(),title:"New Conversation",messageMap:{}};this.state.userData&&this.state.userData.leadInfo&&(t.leadInfo=this.state.userData.leadInfo),this.state.conversations[e]=t,s(this.state.conversations),this.state.activeConversationId=e;const n=document.getElementById("empty-state"),o=document.getElementById("messages-container"),i=document.getElementById("input-container");n&&(n.style.display="none"),o&&(o.style.display="flex",o.innerHTML=""),i&&(i.style.display="flex"),this.updateConversationsList();const r=document.getElementById("message-input");r&&(r.value="",r.focus()),this.state.userData&&(this.state.userData.conversationIds.push(e),this.apiService.updateUserData(this.state.userData))}renderMessages(){console.log("renderMessages called");const e=document.getElementById("messages-container");if(console.log("messagesContainer found:",!!e),!e)return void console.log("No messages container found, returning");if(e.innerHTML="",!this.state.activeConversationId||!this.state.conversations[this.state.activeConversationId])return void console.log("No active conversation or conversation not found");const t=this.state.conversations[this.state.activeConversationId].messageMap;if(console.log("Message map keys:",Object.keys(t||{})),!t||0===Object.keys(t).length)return void console.log("No messages in conversation");const s=Object.values(t);s.forEach((e=>{e.createTime||(e.createTime=Date.now()),"user"!==e.role&&"assistant"!==e.role&&(["bot","ai","claude"].includes(e.role)?e.role="assistant":e.role="user")})),s.sort(((e,t)=>(e.createTime||0)-(t.createTime||0))),s.forEach((e=>{this.addMessageToUI(e)})),e.scrollTop=e.scrollHeight}addMessageToUI(e){const t=document.getElementById("messages-container");if(!t)return;if(!e||!e.content||0===e.content.length)return void console.error("Attempted to add invalid message to UI",e);const s=document.createElement("div");if(s.classList.add("message"),s.style.maxWidth="80%",s.style.padding="10px 14px",s.style.borderRadius="18px",s.style.fontSize="14px",s.style.lineHeight="1.4",s.style.position="relative",s.style.whiteSpace="pre-wrap",s.style.marginBottom="12px","user"===("bot"===e.role?"assistant":e.role)){s.classList.add("user-message"),s.style.alignSelf="flex-end",s.style.backgroundColor="#e0e7ff",s.style.borderBottomRightRadius="4px",s.style.color="#2d3748",s.style.marginLeft="auto",s.style.marginRight="0";const t=e.content[0];"text"===t.contentType&&(s.textContent=t.body)}else{s.classList.add("assistant-message"),s.style.alignSelf="flex-start",s.style.backgroundColor="#f5f5f5",s.style.borderBottomLeftRadius="4px",s.style.marginLeft="0",s.style.marginRight="auto";const t=e.content[0];if("text"===t.contentType){let n=t.body;n=this.convertUrlsToLinks(n),n=this.processCitationReferences(n,e);const o=500;if(n.length>o){const e=n.substring(0,o)+"...",t=n,i=document.createElement("div");i.innerHTML=e;const a=document.createElement("button");a.textContent="Read more",a.style.background="none",a.style.border="none",a.style.color="#6b46c1",a.style.cursor="pointer",a.style.fontSize="12px",a.style.padding="4px 0",a.style.marginTop="8px",a.style.textDecoration="underline";let r=!1;a.addEventListener("click",(()=>{r?(i.innerHTML=e,a.textContent="Read more",r=!1):(i.innerHTML=t,a.textContent="Read less",r=!0)})),s.innerHTML="",s.appendChild(i),s.appendChild(a)}else s.innerHTML=n}}if(e.createTime){const t=document.createElement("span");t.classList.add("timestamp"),t.textContent=this.formatTimestamp(e.createTime),t.style.fontSize="10px",t.style.color="#a0aec0",t.style.marginTop="4px",t.style.display="block",s.appendChild(t)}t.style.display="flex",t.style.flexDirection="column",t.appendChild(s),t.scrollTop=t.scrollHeight}convertUrlsToLinks(e){console.log("Converting URLs in text:",e);let t=e;return[/(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/g,/(www\.[^\s<]+[^<.,:;"')\]\s])/g,/([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})/g].forEach((e=>{t=t.replace(e,(e=>{console.log("Found URL match:",e);let t=e;t.startsWith("www.")&&(t="https://"+t),t.includes("@")&&(t="mailto:"+t);const s=`<a href="${t}" target="_blank" rel="noopener noreferrer" style="color: #d32f2f; text-decoration: underline;">${e}</a>`;return console.log("Generated link HTML:",s),s}))})),console.log("Final processed text:",t),t}processCitationReferences(e,t){const n=this.state.activeConversationId?this.state.conversations[this.state.activeConversationId]:null;if(!n)return e;n.citationMappings||(n.citationMappings={});let o=e.replace(/\[\^(tooluse_[a-zA-Z0-9_-]+@\d+)\]/g,((e,t)=>{const o=`citation-${t.replace(/[@.]/g,"-")}`;let i="";const a=n.citationMappings||{};for(const[e,s]of Object.entries(a))if(s===t){i=e;break}if(!i){const e=Object.keys(a).map((e=>parseInt(e))).filter((e=>!isNaN(e)));i=(e.length>0?Math.max(...e)+1:1).toString(),n.citationMappings[i]=t,s(this.state.conversations)}return`<span class="citation-reference" id="${o}" \n      data-reference="${t}">\n      <svg viewBox="0 0 24 24" width="14" height="14" stroke="currentColor" fill="none">\n        <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>\n        <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>\n      </svg>\n    </span>`}));return o=o.replace(/\[\^(\d+)\]/g,((e,t)=>{const s=(n.citationMappings||{})[t];return s?`<span class="citation-reference" id="citation-${s.replace(/[@.]/g,"-")}-${t}" \n        data-reference="${s}">\n        <svg viewBox="0 0 24 24" width="14" height="14" stroke="currentColor" fill="none">\n          <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>\n          <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>\n        </svg>\n      </span>`:e})),o}injectCitationStyles(){if(!document.getElementById("citation-styles")){const e=document.createElement("style");e.id="citation-styles",e.textContent="\n        /* Citation reference buttons */\n        .citation-reference {\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n          color: #4267B2;\n          margin: 0 2px;\n          padding: 2px;\n          border-radius: 3px;\n          cursor: pointer;\n          background-color: rgba(66, 103, 178, 0.1);\n        }\n        \n        .citation-reference:hover {\n          background-color: rgba(66, 103, 178, 0.2);\n        }\n        \n        /* Citation popup styling */\n        #citation-popup {\n          position: fixed;\n          z-index: 2000;\n          max-width: 400px;\n          width: auto;\n          background-color: white;\n          border: 1px solid #e2e8f0;\n          border-radius: 8px;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n          padding: 12px 16px;\n          font-size: 14px;\n          max-height: 300px;\n          overflow-y: auto;\n          color: #2d3748;\n          cursor: move;\n        }\n        \n        #citation-popup .popup-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          border-bottom: 1px solid #e2e8f0;\n          padding-bottom: 8px;\n          margin-bottom: 8px;\n          cursor: move;\n        }\n        \n        #citation-popup .popup-title {\n          font-weight: bold;\n          margin: 0;\n          padding-right: 24px;\n        }\n        \n        #citation-popup .popup-source-url {\n          margin-bottom: 10px;\n          padding: 6px;\n          background-color: #f8f9fa;\n          border-radius: 4px;\n        }\n        \n        #citation-popup .popup-source-url a {\n          color: #4267B2;\n          text-decoration: none;\n          font-weight: 500;\n          display: flex;\n          align-items: center;\n        }\n        \n        #citation-popup .popup-source-url a:hover {\n          text-decoration: underline;\n        }\n        \n        #citation-popup .popup-content {\n          color: #4a5568;\n          line-height: 1.5;\n          white-space: pre-line;\n        }\n        \n        #citation-popup .close-button {\n          border: none;\n          background: none;\n          cursor: pointer;\n          font-size: 16px;\n          color: #a0aec0;\n          padding: 0;\n          width: 24px;\n          height: 24px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border-radius: 50%;\n        }\n        \n        #citation-popup .close-button:hover {\n          background-color: #f7fafc;\n          color: #718096;\n        }\n      ",document.head.appendChild(e),document.addEventListener("click",(e=>{const t=e.target.closest(".citation-reference");if(t){e.preventDefault(),e.stopPropagation();const s=t.getAttribute("data-reference");s&&this.showCitationPopup(s)}}))}}showCitationPopup(e){console.log("Citation clicked:",e);const t=document.getElementById("citation-popup");t&&t.remove();const s=document.createElement("div");s.id="citation-popup";const n=this.state.activeConversationId?this.state.conversations[this.state.activeConversationId]:null;if(!n)return s.innerHTML='<div style="color:red;">Reference not found.</div>',void document.body.appendChild(s);const o=Object.values(n.messageMap||{}).filter((e=>"assistant"===e.role));let i=null,a=null;const[r,l]=e.split("@");for(const e of o)if(e.thinkingLog){for(const t of e.thinkingLog)if(t.content){for(const e of t.content)if("toolResult"===e.contentType&&e.body&&e.body.toolUseId===r&&e.body.content&&e.body.content[parseInt(l)]&&e.body.content[parseInt(l)].json){const t=e.body.content[parseInt(l)].json;i=t.content,a=t.sourceUrl||null;break}if(i)break}if(i)break}let c="";a&&(c=`\n        <div class="popup-source-url">\n          <a href="${a}" target="_blank" rel="noopener noreferrer">\n            View source document\n            <svg viewBox="0 0 24 24" width="12" height="12" stroke="currentColor" fill="none" style="display:inline-block;vertical-align:middle;margin-left:4px;">\n              <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>\n              <polyline points="15 3 21 3 21 9"></polyline>\n              <line x1="10" y1="14" x2="21" y2="3"></line>\n            </svg>\n          </a>\n        </div>\n      `);const d=`<div class="popup-content">${i||"Content not found"}</div>`;s.innerHTML='\n      <div class="popup-header">\n        <h3 class="popup-title">Source Reference</h3>\n        <button class="close-button">✕</button>\n      </div>\n    '+c+d,document.body.appendChild(s);const h=window.__lastClickPosition||{clientX:100,clientY:100},p=s.getBoundingClientRect();let u=h.clientY+20,m=h.clientX-20;const y=window.innerWidth,g=window.innerHeight;m+p.width>y-20&&(m=y-p.width-20),m<20&&(m=20),u+p.height>g-20&&(u=h.clientY-p.height-20),u<20&&(u=20),s.style.top=`${u}px`,s.style.left=`${m}px`;const v=s.querySelector(".close-button");v&&v.addEventListener("click",(()=>{s.remove()})),this.makeDraggable(s),document.addEventListener("click",(function e(t){s.contains(t.target)||(s.remove(),document.removeEventListener("click",e))}))}makeDraggable(e){let t=!1,s=0,n=0;(e.querySelector(".popup-header")||e).addEventListener("mousedown",(function(o){if(!(o instanceof MouseEvent)||0!==o.button)return;t=!0;const i=e.getBoundingClientRect();s=o.clientX-i.left,n=o.clientY-i.top,o.preventDefault()})),document.addEventListener("mousemove",(function(o){if(!(t&&o instanceof MouseEvent))return;const i=o.clientX-s,a=o.clientY-n;e.style.left=i+"px",e.style.top=a+"px"})),document.addEventListener("mouseup",(function(){t=!1}))}formatTimestamp(e){return new Date(e).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}showThinkingIndicator(){const e=document.getElementById("messages-container");if(!e)return;const t=document.createElement("div");t.classList.add("thinking"),t.id="thinking-indicator",t.style.display="flex",t.style.gap="4px",t.style.padding="8px 14px",t.style.alignSelf="flex-start",t.style.backgroundColor="#f5f5f5",t.style.borderRadius="18px",t.style.borderBottomLeftRadius="4px";for(let e=0;e<3;e++){const s=document.createElement("div");s.classList.add("dot"),s.style.width="8px",s.style.height="8px",s.style.borderRadius="50%",s.style.backgroundColor="#a0aec0",s.style.animation="bounce 1.5s infinite ease-in-out",1===e&&(s.style.animationDelay="0.2s"),2===e&&(s.style.animationDelay="0.4s"),t.appendChild(s)}if(e.appendChild(t),e.scrollTop=e.scrollHeight,!document.getElementById("bounce-animation")){const e=document.createElement("style");e.id="bounce-animation",e.textContent="\n        @keyframes bounce {\n          0%, 80%, 100% { transform: translateY(0); }\n          40% { transform: translateY(-6px); }\n        }\n      ",document.head.appendChild(e)}}removeThinkingIndicator(){const e=document.getElementById("thinking-indicator");e&&e.remove()}sendMessage(e,t){return l(this,void 0,void 0,(function*(){var n;try{this.state.isWaitingForResponse=!0;const o=document.getElementById("message-input"),i=document.getElementById("send-button");o&&(o.disabled=!0),i&&(i.disabled=!0);const a={role:"user",content:[{contentType:"text",body:e}],createTime:Date.now()};this.addMessageToUI(a);const r={conversationId:this.state.activeConversationId||null,message:{model:t,content:[{contentType:"text",body:e}]},continueGenerate:!1},l=!this.state.activeConversationId||this.state.activeConversationId&&!this.state.conversations[this.state.activeConversationId],c=this.state.activeConversationId||"temp-"+Date.now();this.state.conversations[c]?this.state.conversations[c].title&&"Conversation"!==this.state.conversations[c].title&&"New Conversation"!==this.state.conversations[c].title||0!==Object.keys(this.state.conversations[c].messageMap||{}).length||(this.state.conversations[c].title=e):(this.state.conversations[c]={id:c,createTime:Date.now(),title:e,messageMap:{}},this.state.userData&&this.state.userData.leadInfo&&(this.state.conversations[c].leadInfo=this.state.userData.leadInfo)),this.state.conversations[c].messageMap||(this.state.conversations[c].messageMap={});const d="user-"+Date.now();this.state.conversations[c].messageMap[d]=a,l&&(this.state.activeConversationId=c),s(this.state.conversations),this.updateConversationsList(),this.showThinkingIndicator();const h=yield this.apiService.sendMessage(r),{conversationId:p,messageId:u}=h;if(console.log("API Response - ConversationId:",p,"MessageId:",u),p&&this.state.userData&&this.state.userData.leadInfo&&(yield this.apiService.updateLeadConversation(this.state.userData.userId,p)),p!==c&&c.startsWith("temp-")&&(console.log("Transferring user message from temp conversation to real conversation"),this.state.conversations[p]||(this.state.conversations[p]={id:p,createTime:Date.now(),title:e,messageMap:{}},this.state.userData&&this.state.userData.leadInfo&&(this.state.conversations[p].leadInfo=this.state.userData.leadInfo)),this.state.conversations[p].messageMap||(this.state.conversations[p].messageMap={}),this.state.conversations[p].messageMap[d]=a,this.state.conversations[p].title&&"Conversation"!==this.state.conversations[p].title&&"New Conversation"!==this.state.conversations[p].title||(this.state.conversations[p].title=e),delete this.state.conversations[c],this.state.activeConversationId=p,this.state.userData&&this.state.userData.leadInfo&&(yield this.apiService.updateLeadConversation(this.state.userData.userId,p),console.log("Updated lead with real conversation ID:",p)),s(this.state.conversations),this.updateConversationsList()),!(yield this.pollForMessage(p,u))&&(yield this.fetchConversation(p),!Object.values((null===(n=this.state.conversations[p])||void 0===n?void 0:n.messageMap)||{}).some((e=>"assistant"===e.role||"bot"===e.role)))){this.removeThinkingIndicator();const e={role:"assistant",content:[{contentType:"text",body:"Sorry, I wasn't able to retrieve the response. Please try again."}],createTime:Date.now()};this.addMessageToUI(e);const t="error-"+Date.now();this.state.conversations[p].messageMap[t]=e}this.state.userData&&!this.state.userData.conversationIds.includes(p)&&(this.state.userData.conversationIds.push(p),this.apiService.updateUserData(this.state.userData)),s(this.state.conversations)}catch(e){console.error("Error sending message:",e),this.removeThinkingIndicator();const t={role:"assistant",content:[{contentType:"text",body:"Sorry, there was an error processing your request. Please try again."}],createTime:Date.now()};if(this.addMessageToUI(t),this.state.activeConversationId&&this.state.conversations[this.state.activeConversationId]){const e="error-"+Date.now();this.state.conversations[this.state.activeConversationId].messageMap||(this.state.conversations[this.state.activeConversationId].messageMap={}),this.state.conversations[this.state.activeConversationId].messageMap[e]=t,s(this.state.conversations)}}finally{this.state.isWaitingForResponse=!1;const e=document.getElementById("message-input"),t=document.getElementById("send-button");e&&(e.disabled=!1,e.focus()),t&&(t.disabled=!e||""===e.value.trim()),this.removeThinkingIndicator()}}))}fetchConversation(e){return l(this,void 0,void 0,(function*(){let t=0;for(yield i(this.state.initialRetryDelay);t<this.state.maxRetries;)try{console.log(`Fetching conversation (attempt ${t+1}/${this.state.maxRetries})...`);const n=yield this.apiService.fetchConversation(e);n.messageMap||(n.messageMap={}),Object.values(n.messageMap).forEach((e=>{e.createTime||(e.createTime=Date.now())}));const o=Object.values(n.messageMap);if(o.length>0&&(o.sort(((e,t)=>(e.createTime||0)-(t.createTime||0))),!n.title||""===n.title.trim())){const e=o.find((e=>"user"===e.role));if(e&&e.content&&e.content.length>0){const t=e.content[0].body;n.title=t.length>30?t.substring(0,27)+"...":t}else n.title="Conversation"}return!n.leadInfo&&this.state.userData&&this.state.userData.leadInfo&&(n.leadInfo=this.state.userData.leadInfo),this.state.conversations[e]=n,this.state.activeConversationId===e&&this.renderMessages(),this.updateConversationsList(),s(this.state.conversations),void console.log("Conversation retrieved successfully")}catch(e){if(console.error("Error fetching conversation:",e),e instanceof Error&&(e.message.includes("404")||404===e.status||404===e.statusCode)?console.log("Conversation not ready yet, will retry after delay"):console.error("Unexpected error fetching conversation:",e),t++,t>=this.state.maxRetries){console.log("Max retries reached. Giving up on fetching conversation.");break}const s=this.state.retryDelay*Math.pow(1.5,t-1);console.log(`Waiting ${s}ms before next attempt...`),yield i(s)}console.error(`Failed to fetch conversation ${e} after ${this.state.maxRetries} attempts`),this.state.conversations[e]||(this.state.conversations[e]={id:e,createTime:Date.now(),title:"Conversation",messageMap:{}},this.state.userData&&this.state.userData.leadInfo&&(this.state.conversations[e].leadInfo=this.state.userData.leadInfo))}))}pollForMessage(e,t){return l(this,void 0,void 0,(function*(){let n=0;for(yield i(this.state.initialRetryDelay),console.log("Poll for Message been called");n<this.state.maxRetries;)try{console.log(`Polling for message (attempt ${n+1}/${this.state.maxRetries})...`);const o=yield this.apiService.fetchMessage(e,t);if(o.success&&o.message){console.log("Message retrieved successfully");const t=o.message;if("bot"===t.role&&(t.role="assistant"),t.createTime||(t.createTime=Date.now()),console.log("Bot message:",t),this.addMessageToUI(t),this.state.conversations[e]&&this.state.conversations[e].messageMap){const n=t.id||`bot-${Date.now()}`;this.state.conversations[e].messageMap[n]=t,s(this.state.conversations)}return t}if(404===o.status&&console.log("Message not ready yet, will retry after delay"),n++,n>=this.state.maxRetries){console.log("Max retries reached. Giving up.");break}const a=this.state.retryDelay*Math.pow(1.5,n-1);console.log(`Waiting ${a}ms before next attempt...`),yield i(a)}catch(e){if(console.error("Error polling for message:",e),n++,n>=this.state.maxRetries){console.log("Max retries reached. Giving up.");break}const t=this.state.retryDelay*Math.pow(1.5,n-1);yield i(t)}return null}))}}function d(){console.log("Verifying chatbot DOM structure...");const e=document.getElementById("chatbot-container");if(!e)return void console.error("Chatbot container not found!");console.log("Container structure:",e.outerHTML.substring(0,500)+"...");const t=Array.from(e.children).map((e=>`${e.tagName}.${e.className}`));console.log("Child elements order:",t);const s=document.getElementById("chatbot-layout");if(s){const e=Array.from(s.children).map((e=>`${e.tagName}.${e.className}`));console.log("Layout children:",e)}else console.error("Layout container not found!")}document.addEventListener("DOMContentLoaded",(()=>{const e=window.API_BASE_URL||"",t=window.API_KEY||"";setTimeout((()=>{try{new c({apiBaseUrl:e,apiKey:t}),console.log("Chatbot initialized successfully"),setTimeout(d,500)}catch(e){console.error("Error initializing chatbot:",e)}}),100)}))})();